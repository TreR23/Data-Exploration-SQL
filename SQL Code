/*
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views

Executed in Google BiqQuery
*/


SELECT *
FROM `coviddeathvacs.Covid.Deaths`
ORDER BY 3, 4

SELECT * 
FROM `coviddeathvacs.Covid.Deaths`
ORDER BY 3,4

-- Select data we are using

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM `coviddeathvacs.Covid.Deaths`
ORDER BY 1,2;

--Looking at Total Cases vs Total Deaths
-- Shows the likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, ROUND(((total_deaths/total_cases)* 100),4) AS DeathPercentage
FROM `coviddeathvacs.Covid.Deaths`
WHERE location LIKE '%States%'
ORDER BY 1,2

--Looking at Total Cases vs Population
--Shows what percentage of the population got covid

SELECT location, date, population, total_cases, ROUND(((total_cases/population)* 100),4) AS PercentPopulationInfected
FROM `coviddeathvacs.Covid.Deaths`
WHERE location LIKE '%States%'
ORDER BY 1,2

--Looking at Countries with Highest Infection Rate compared to Population

SELECT location, population, MAX(total_cases) AS HighestInfectionCount, ROUND((MAX((total_cases/population))* 100),4) AS PercentPopulationInfected
FROM `coviddeathvacs.Covid.Deaths`
--WHERE location LIKE '%States%'
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC;

-- Showing Countries with Highest Death Count per Population

SELECT location, MAX(total_deaths) AS TotalDeathCount
FROM `coviddeathvacs.Covid.Deaths`
--WHERE location LIKE '%States%'
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC;

--Now, breaking things down by continent

--Showing the continents with the highest death count per population

SELECT continent, MAX(total_deaths) AS TotalDeathCount
FROM `coviddeathvacs.Covid.Deaths`
--WHERE location LIKE '%States%'
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC;

--Global Numbers

SELECT date, SUM(new_cases) AS TotalCases, SUM(new_deaths) AS TotalDeaths, ROUND((SUM(new_deaths)/SUM(new_cases) *100),4) AS DeathPercentage
FROM `coviddeathvacs.Covid.Deaths`
--WHERE location LIKE '%States%'
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY 1,2

SELECT SUM(new_cases) AS TotalCases, SUM(new_deaths) AS TotalDeaths, ROUND((SUM(new_deaths)/SUM(new_cases) *100),4) AS DeathPercentage
FROM `coviddeathvacs.Covid.Deaths`
--WHERE location LIKE '%States%'
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2

-- Looking at Total Population vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `coviddeathvacs.Covid.Deaths` AS dea
JOIN `coviddeathvacs.Covid.Vacs` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3

-- Use CTE

WITH PopvsVac 
AS 
(SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `coviddeathvacs.Covid.Deaths` AS dea
JOIN `coviddeathvacs.Covid.Vacs` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
)

SELECT *, (RollingPeopleVaccinated/Population)*100 AS PercentofPopVaccinated
FROM PopvsVac

--Using a Temp Table

DROP TABLE IF EXISTS `coviddeathvacs.Covid.PercentPopulationVaccinated`

CREATE TABLE `coviddeathvacs.Covid.PercentPopulationVaccinated`
(
  continent string,
  location string,
  Date datetime,
  Population numeric,
  New_vaccinations numeric,
  RollingPeopleVaccinated numeric
)


INSERT INTO `coviddeathvacs.Covid.PercentPopulationVaccinated`
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `coviddeathvacs.Covid.Deaths` AS dea
JOIN `coviddeathvacs.Covid.Vacs` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
--WHERE dea.continent IS NOT NULL
--ORDER BY 2,3


SELECT *, (RollingPeopleVaccinated/Population)*100 AS PercentofPopVaccinated
FROM `coviddeathvacs.Covid.PercentPopulationVaccinated`


-- Create view to store data for later visualizations 

CREATE VIEW `coviddeathvacs.Covid.PercentPopulationVaccinatedView` AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `coviddeathvacs.Covid.Deaths` AS dea
JOIN `coviddeathvacs.Covid.Vacs` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
